// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/common.proto

#include "proto/common.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_proto_2fcommon_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fcommon_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DeviceInfo;
}  // namespace protobuf_proto_2fcommon_2eproto
namespace proto {
class NoneDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<None>
      _instance;
} _None_default_instance_;
class DeviceInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeviceInfo>
      _instance;
} _DeviceInfo_default_instance_;
class LoginRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoginRequest>
      _instance;
} _LoginRequest_default_instance_;
class LoginReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoginReply>
      _instance;
} _LoginReply_default_instance_;
class RpcMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RpcMessage>
      _instance;
} _RpcMessage_default_instance_;
}  // namespace proto
namespace protobuf_proto_2fcommon_2eproto {
static void InitDefaultsNone() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_None_default_instance_;
    new (ptr) ::proto::None();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::None::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_None =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsNone}, {}};

static void InitDefaultsDeviceInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_DeviceInfo_default_instance_;
    new (ptr) ::proto::DeviceInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::DeviceInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeviceInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeviceInfo}, {}};

static void InitDefaultsLoginRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_LoginRequest_default_instance_;
    new (ptr) ::proto::LoginRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::LoginRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LoginRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLoginRequest}, {
      &protobuf_proto_2fcommon_2eproto::scc_info_DeviceInfo.base,}};

static void InitDefaultsLoginReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_LoginReply_default_instance_;
    new (ptr) ::proto::LoginReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::LoginReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LoginReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLoginReply}, {
      &protobuf_proto_2fcommon_2eproto::scc_info_DeviceInfo.base,}};

static void InitDefaultsRpcMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::proto::_RpcMessage_default_instance_;
    new (ptr) ::proto::RpcMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::proto::RpcMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RpcMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRpcMessage}, {
      &protobuf_proto_2fcommon_2eproto::scc_info_DeviceInfo.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_None.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeviceInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LoginRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LoginReply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RpcMessage.base);
}

::google::protobuf::Metadata file_level_metadata[5];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::None, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::DeviceInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::DeviceInfo, addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::DeviceInfo, deviceid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::DeviceInfo, sessionid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::LoginRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::LoginRequest, device_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::LoginRequest, login_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::LoginReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::LoginReply, device_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::LoginReply, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::LoginReply, player_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::RpcMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::RpcMessage, device_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::RpcMessage, method_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::RpcMessage, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::proto::RpcMessage, params_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::proto::None)},
  { 5, -1, sizeof(::proto::DeviceInfo)},
  { 13, -1, sizeof(::proto::LoginRequest)},
  { 20, -1, sizeof(::proto::LoginReply)},
  { 28, -1, sizeof(::proto::RpcMessage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_None_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_DeviceInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_LoginRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_LoginReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::proto::_RpcMessage_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "proto/common.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022proto/common.proto\022\005proto\"\006\n\004None\"\?\n\nD"
      "eviceInfo\022\014\n\004addr\030\001 \001(\t\022\020\n\010deviceid\030\002 \001("
      "\014\022\021\n\tsessionid\030\003 \001(\r\"J\n\014LoginRequest\022&\n\013"
      "device_info\030\001 \001(\0132\021.proto.DeviceInfo\022\022\n\n"
      "login_type\030\002 \001(\r\"Z\n\nLoginReply\022&\n\013device"
      "_info\030\001 \001(\0132\021.proto.DeviceInfo\022\017\n\007retcod"
      "e\030\002 \001(\r\022\023\n\013player_data\030\003 \001(\014\"`\n\nRpcMessa"
      "ge\022&\n\013device_info\030\001 \001(\0132\021.proto.DeviceIn"
      "fo\022\016\n\006method\030\002 \001(\t\022\n\n\002id\030\003 \001(\r\022\016\n\006params"
      "\030\004 \001(\014b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 374);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "proto/common.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_proto_2fcommon_2eproto
namespace proto {

// ===================================================================

void None::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

None::None()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fcommon_2eproto::scc_info_None.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.None)
}
None::None(const None& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.None)
}

void None::SharedCtor() {
}

None::~None() {
  // @@protoc_insertion_point(destructor:proto.None)
  SharedDtor();
}

void None::SharedDtor() {
}

void None::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* None::descriptor() {
  ::protobuf_proto_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const None& None::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fcommon_2eproto::scc_info_None.base);
  return *internal_default_instance();
}


void None::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.None)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool None::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.None)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.None)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.None)
  return false;
#undef DO_
}

void None::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.None)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.None)
}

::google::protobuf::uint8* None::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.None)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.None)
  return target;
}

size_t None::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.None)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void None::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.None)
  GOOGLE_DCHECK_NE(&from, this);
  const None* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const None>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.None)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.None)
    MergeFrom(*source);
  }
}

void None::MergeFrom(const None& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.None)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void None::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.None)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void None::CopyFrom(const None& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.None)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool None::IsInitialized() const {
  return true;
}

void None::Swap(None* other) {
  if (other == this) return;
  InternalSwap(other);
}
void None::InternalSwap(None* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata None::GetMetadata() const {
  protobuf_proto_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeviceInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeviceInfo::kAddrFieldNumber;
const int DeviceInfo::kDeviceidFieldNumber;
const int DeviceInfo::kSessionidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeviceInfo::DeviceInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fcommon_2eproto::scc_info_DeviceInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.DeviceInfo)
}
DeviceInfo::DeviceInfo(const DeviceInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.addr().size() > 0) {
    addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.addr_);
  }
  deviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.deviceid().size() > 0) {
    deviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceid_);
  }
  sessionid_ = from.sessionid_;
  // @@protoc_insertion_point(copy_constructor:proto.DeviceInfo)
}

void DeviceInfo::SharedCtor() {
  addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sessionid_ = 0u;
}

DeviceInfo::~DeviceInfo() {
  // @@protoc_insertion_point(destructor:proto.DeviceInfo)
  SharedDtor();
}

void DeviceInfo::SharedDtor() {
  addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deviceid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeviceInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeviceInfo::descriptor() {
  ::protobuf_proto_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeviceInfo& DeviceInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fcommon_2eproto::scc_info_DeviceInfo.base);
  return *internal_default_instance();
}


void DeviceInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DeviceInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sessionid_ = 0u;
  _internal_metadata_.Clear();
}

bool DeviceInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.DeviceInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string addr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_addr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->addr().data(), static_cast<int>(this->addr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.DeviceInfo.addr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes deviceid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_deviceid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 sessionid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sessionid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.DeviceInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.DeviceInfo)
  return false;
#undef DO_
}

void DeviceInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.DeviceInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string addr = 1;
  if (this->addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->addr().data(), static_cast<int>(this->addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.DeviceInfo.addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->addr(), output);
  }

  // bytes deviceid = 2;
  if (this->deviceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->deviceid(), output);
  }

  // uint32 sessionid = 3;
  if (this->sessionid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->sessionid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.DeviceInfo)
}

::google::protobuf::uint8* DeviceInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.DeviceInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string addr = 1;
  if (this->addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->addr().data(), static_cast<int>(this->addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.DeviceInfo.addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->addr(), target);
  }

  // bytes deviceid = 2;
  if (this->deviceid().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->deviceid(), target);
  }

  // uint32 sessionid = 3;
  if (this->sessionid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->sessionid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DeviceInfo)
  return target;
}

size_t DeviceInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DeviceInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string addr = 1;
  if (this->addr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->addr());
  }

  // bytes deviceid = 2;
  if (this->deviceid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->deviceid());
  }

  // uint32 sessionid = 3;
  if (this->sessionid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sessionid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeviceInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.DeviceInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const DeviceInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeviceInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.DeviceInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.DeviceInfo)
    MergeFrom(*source);
  }
}

void DeviceInfo::MergeFrom(const DeviceInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.DeviceInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.addr().size() > 0) {

    addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.addr_);
  }
  if (from.deviceid().size() > 0) {

    deviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceid_);
  }
  if (from.sessionid() != 0) {
    set_sessionid(from.sessionid());
  }
}

void DeviceInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.DeviceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeviceInfo::CopyFrom(const DeviceInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DeviceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeviceInfo::IsInitialized() const {
  return true;
}

void DeviceInfo::Swap(DeviceInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeviceInfo::InternalSwap(DeviceInfo* other) {
  using std::swap;
  addr_.Swap(&other->addr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  deviceid_.Swap(&other->deviceid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(sessionid_, other->sessionid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeviceInfo::GetMetadata() const {
  protobuf_proto_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LoginRequest::InitAsDefaultInstance() {
  ::proto::_LoginRequest_default_instance_._instance.get_mutable()->device_info_ = const_cast< ::proto::DeviceInfo*>(
      ::proto::DeviceInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginRequest::kDeviceInfoFieldNumber;
const int LoginRequest::kLoginTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginRequest::LoginRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fcommon_2eproto::scc_info_LoginRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.LoginRequest)
}
LoginRequest::LoginRequest(const LoginRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_device_info()) {
    device_info_ = new ::proto::DeviceInfo(*from.device_info_);
  } else {
    device_info_ = NULL;
  }
  login_type_ = from.login_type_;
  // @@protoc_insertion_point(copy_constructor:proto.LoginRequest)
}

void LoginRequest::SharedCtor() {
  ::memset(&device_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&login_type_) -
      reinterpret_cast<char*>(&device_info_)) + sizeof(login_type_));
}

LoginRequest::~LoginRequest() {
  // @@protoc_insertion_point(destructor:proto.LoginRequest)
  SharedDtor();
}

void LoginRequest::SharedDtor() {
  if (this != internal_default_instance()) delete device_info_;
}

void LoginRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LoginRequest::descriptor() {
  ::protobuf_proto_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoginRequest& LoginRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fcommon_2eproto::scc_info_LoginRequest.base);
  return *internal_default_instance();
}


void LoginRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.LoginRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && device_info_ != NULL) {
    delete device_info_;
  }
  device_info_ = NULL;
  login_type_ = 0u;
  _internal_metadata_.Clear();
}

bool LoginRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.LoginRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.DeviceInfo device_info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_device_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 login_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &login_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.LoginRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.LoginRequest)
  return false;
#undef DO_
}

void LoginRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.LoginRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.DeviceInfo device_info = 1;
  if (this->has_device_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_device_info(), output);
  }

  // uint32 login_type = 2;
  if (this->login_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->login_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.LoginRequest)
}

::google::protobuf::uint8* LoginRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.LoginRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.DeviceInfo device_info = 1;
  if (this->has_device_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_device_info(), deterministic, target);
  }

  // uint32 login_type = 2;
  if (this->login_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->login_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.LoginRequest)
  return target;
}

size_t LoginRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.LoginRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.DeviceInfo device_info = 1;
  if (this->has_device_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *device_info_);
  }

  // uint32 login_type = 2;
  if (this->login_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->login_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoginRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.LoginRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.LoginRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.LoginRequest)
    MergeFrom(*source);
  }
}

void LoginRequest::MergeFrom(const LoginRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.LoginRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_device_info()) {
    mutable_device_info()->::proto::DeviceInfo::MergeFrom(from.device_info());
  }
  if (from.login_type() != 0) {
    set_login_type(from.login_type());
  }
}

void LoginRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.LoginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginRequest::CopyFrom(const LoginRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.LoginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginRequest::IsInitialized() const {
  return true;
}

void LoginRequest::Swap(LoginRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginRequest::InternalSwap(LoginRequest* other) {
  using std::swap;
  swap(device_info_, other->device_info_);
  swap(login_type_, other->login_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LoginRequest::GetMetadata() const {
  protobuf_proto_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LoginReply::InitAsDefaultInstance() {
  ::proto::_LoginReply_default_instance_._instance.get_mutable()->device_info_ = const_cast< ::proto::DeviceInfo*>(
      ::proto::DeviceInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginReply::kDeviceInfoFieldNumber;
const int LoginReply::kRetcodeFieldNumber;
const int LoginReply::kPlayerDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginReply::LoginReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fcommon_2eproto::scc_info_LoginReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.LoginReply)
}
LoginReply::LoginReply(const LoginReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  player_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.player_data().size() > 0) {
    player_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.player_data_);
  }
  if (from.has_device_info()) {
    device_info_ = new ::proto::DeviceInfo(*from.device_info_);
  } else {
    device_info_ = NULL;
  }
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.LoginReply)
}

void LoginReply::SharedCtor() {
  player_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&device_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&device_info_)) + sizeof(retcode_));
}

LoginReply::~LoginReply() {
  // @@protoc_insertion_point(destructor:proto.LoginReply)
  SharedDtor();
}

void LoginReply::SharedDtor() {
  player_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete device_info_;
}

void LoginReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LoginReply::descriptor() {
  ::protobuf_proto_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoginReply& LoginReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fcommon_2eproto::scc_info_LoginReply.base);
  return *internal_default_instance();
}


void LoginReply::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.LoginReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  player_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && device_info_ != NULL) {
    delete device_info_;
  }
  device_info_ = NULL;
  retcode_ = 0u;
  _internal_metadata_.Clear();
}

bool LoginReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.LoginReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.DeviceInfo device_info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_device_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 retcode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes player_data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_player_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.LoginReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.LoginReply)
  return false;
#undef DO_
}

void LoginReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.LoginReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.DeviceInfo device_info = 1;
  if (this->has_device_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_device_info(), output);
  }

  // uint32 retcode = 2;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->retcode(), output);
  }

  // bytes player_data = 3;
  if (this->player_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->player_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.LoginReply)
}

::google::protobuf::uint8* LoginReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.LoginReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.DeviceInfo device_info = 1;
  if (this->has_device_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_device_info(), deterministic, target);
  }

  // uint32 retcode = 2;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->retcode(), target);
  }

  // bytes player_data = 3;
  if (this->player_data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->player_data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.LoginReply)
  return target;
}

size_t LoginReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.LoginReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes player_data = 3;
  if (this->player_data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->player_data());
  }

  // .proto.DeviceInfo device_info = 1;
  if (this->has_device_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *device_info_);
  }

  // uint32 retcode = 2;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoginReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.LoginReply)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.LoginReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.LoginReply)
    MergeFrom(*source);
  }
}

void LoginReply::MergeFrom(const LoginReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.LoginReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.player_data().size() > 0) {

    player_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.player_data_);
  }
  if (from.has_device_info()) {
    mutable_device_info()->::proto::DeviceInfo::MergeFrom(from.device_info());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void LoginReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.LoginReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginReply::CopyFrom(const LoginReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.LoginReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginReply::IsInitialized() const {
  return true;
}

void LoginReply::Swap(LoginReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginReply::InternalSwap(LoginReply* other) {
  using std::swap;
  player_data_.Swap(&other->player_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(device_info_, other->device_info_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LoginReply::GetMetadata() const {
  protobuf_proto_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RpcMessage::InitAsDefaultInstance() {
  ::proto::_RpcMessage_default_instance_._instance.get_mutable()->device_info_ = const_cast< ::proto::DeviceInfo*>(
      ::proto::DeviceInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RpcMessage::kDeviceInfoFieldNumber;
const int RpcMessage::kMethodFieldNumber;
const int RpcMessage::kIdFieldNumber;
const int RpcMessage::kParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RpcMessage::RpcMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fcommon_2eproto::scc_info_RpcMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.RpcMessage)
}
RpcMessage::RpcMessage(const RpcMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  method_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.method().size() > 0) {
    method_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_);
  }
  params_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.params().size() > 0) {
    params_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.params_);
  }
  if (from.has_device_info()) {
    device_info_ = new ::proto::DeviceInfo(*from.device_info_);
  } else {
    device_info_ = NULL;
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:proto.RpcMessage)
}

void RpcMessage::SharedCtor() {
  method_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  params_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&device_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&device_info_)) + sizeof(id_));
}

RpcMessage::~RpcMessage() {
  // @@protoc_insertion_point(destructor:proto.RpcMessage)
  SharedDtor();
}

void RpcMessage::SharedDtor() {
  method_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  params_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete device_info_;
}

void RpcMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RpcMessage::descriptor() {
  ::protobuf_proto_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RpcMessage& RpcMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fcommon_2eproto::scc_info_RpcMessage.base);
  return *internal_default_instance();
}


void RpcMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.RpcMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  params_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && device_info_ != NULL) {
    delete device_info_;
  }
  device_info_ = NULL;
  id_ = 0u;
  _internal_metadata_.Clear();
}

bool RpcMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.RpcMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.DeviceInfo device_info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_device_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string method = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_method()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->method().data(), static_cast<int>(this->method().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.RpcMessage.method"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes params = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.RpcMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.RpcMessage)
  return false;
#undef DO_
}

void RpcMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.RpcMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.DeviceInfo device_info = 1;
  if (this->has_device_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_device_info(), output);
  }

  // string method = 2;
  if (this->method().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->method().data(), static_cast<int>(this->method().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.RpcMessage.method");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->method(), output);
  }

  // uint32 id = 3;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->id(), output);
  }

  // bytes params = 4;
  if (this->params().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->params(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.RpcMessage)
}

::google::protobuf::uint8* RpcMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.RpcMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.DeviceInfo device_info = 1;
  if (this->has_device_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_device_info(), deterministic, target);
  }

  // string method = 2;
  if (this->method().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->method().data(), static_cast<int>(this->method().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.RpcMessage.method");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->method(), target);
  }

  // uint32 id = 3;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->id(), target);
  }

  // bytes params = 4;
  if (this->params().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->params(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.RpcMessage)
  return target;
}

size_t RpcMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.RpcMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string method = 2;
  if (this->method().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->method());
  }

  // bytes params = 4;
  if (this->params().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->params());
  }

  // .proto.DeviceInfo device_info = 1;
  if (this->has_device_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *device_info_);
  }

  // uint32 id = 3;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RpcMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.RpcMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const RpcMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RpcMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.RpcMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.RpcMessage)
    MergeFrom(*source);
  }
}

void RpcMessage::MergeFrom(const RpcMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.RpcMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.method().size() > 0) {

    method_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_);
  }
  if (from.params().size() > 0) {

    params_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.params_);
  }
  if (from.has_device_info()) {
    mutable_device_info()->::proto::DeviceInfo::MergeFrom(from.device_info());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void RpcMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.RpcMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RpcMessage::CopyFrom(const RpcMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.RpcMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RpcMessage::IsInitialized() const {
  return true;
}

void RpcMessage::Swap(RpcMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RpcMessage::InternalSwap(RpcMessage* other) {
  using std::swap;
  method_.Swap(&other->method_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  params_.Swap(&other->params_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(device_info_, other->device_info_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RpcMessage::GetMetadata() const {
  protobuf_proto_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::None* Arena::CreateMaybeMessage< ::proto::None >(Arena* arena) {
  return Arena::CreateInternal< ::proto::None >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::DeviceInfo* Arena::CreateMaybeMessage< ::proto::DeviceInfo >(Arena* arena) {
  return Arena::CreateInternal< ::proto::DeviceInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::LoginRequest* Arena::CreateMaybeMessage< ::proto::LoginRequest >(Arena* arena) {
  return Arena::CreateInternal< ::proto::LoginRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::LoginReply* Arena::CreateMaybeMessage< ::proto::LoginReply >(Arena* arena) {
  return Arena::CreateInternal< ::proto::LoginReply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::proto::RpcMessage* Arena::CreateMaybeMessage< ::proto::RpcMessage >(Arena* arena) {
  return Arena::CreateInternal< ::proto::RpcMessage >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
